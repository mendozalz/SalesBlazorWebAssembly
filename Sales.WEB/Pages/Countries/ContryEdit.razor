@page "/countries/edit/{Id:int}"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>Editar País</h3>

@if(country is null)
{
    <p>Cargando...</p>
}
else
{
    <CountryForm @ref="countryForm" Country="country" OnValidSubmit="EditAsync" ReturnAction="Return" />
}

@code {
    private Country? country;
    private CountryForm? countryForm;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var responseHttp = await repository.Get<Country>($"/api/countries/{Id}");

        if (responseHttp.Error)
        {
            if(responseHttp.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/countries");
                return;
            }
            else
            {
                var message = await responseHttp.GetErrorMessageAsync();
                await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            }
        }
        else
        {
            country = responseHttp.Response;
        }
    }

    public async Task EditAsync()
    {
        var responseEdit = await repository.Put("/api/countries", country);
        if(responseEdit.Error)
        {
            var message = await responseEdit.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        else
        {
            Return();
        }
    }
    public void Return()
    {
        countryForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/countries");
    }
}
